<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ujiuye.user.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.ujiuye.user.bean.Users" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="DATE" />
    <result column="modifyDate" property="modifydate" jdbcType="DATE" />
    <result column="useremail" property="useremail" jdbcType="VARCHAR" />
    <result column="userstate" property="userstate" jdbcType="INTEGER" />
    <result column="userDel" property="userdel" jdbcType="INTEGER" />
    <result column="user_role_id" property="userRoleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userId, username, password, name, createDate, modifyDate, useremail, userstate, userDel, 
    user_role_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ujiuye.user.bean.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ujiuye.user.bean.UsersExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ujiuye.user.bean.Users" >
    insert into users (userId, username, password, 
      name, createDate, modifyDate, 
      useremail, userstate, userDel, 
      user_role_id)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{createdate,jdbcType=DATE}, #{modifydate,jdbcType=DATE}, 
      #{useremail,jdbcType=VARCHAR}, #{userstate,jdbcType=INTEGER}, #{userdel,jdbcType=INTEGER}, 
      #{userRoleId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ujiuye.user.bean.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="modifydate != null" >
        modifyDate,
      </if>
      <if test="useremail != null" >
        useremail,
      </if>
      <if test="userstate != null" >
        userstate,
      </if>
      <if test="userdel != null" >
        userDel,
      </if>
      <if test="userRoleId != null" >
        user_role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=DATE},
      </if>
      <if test="modifydate != null" >
        #{modifydate,jdbcType=DATE},
      </if>
      <if test="useremail != null" >
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="userstate != null" >
        #{userstate,jdbcType=INTEGER},
      </if>
      <if test="userdel != null" >
        #{userdel,jdbcType=INTEGER},
      </if>
      <if test="userRoleId != null" >
        #{userRoleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ujiuye.user.bean.UsersExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createDate = #{record.createdate,jdbcType=DATE},
      </if>
      <if test="record.modifydate != null" >
        modifyDate = #{record.modifydate,jdbcType=DATE},
      </if>
      <if test="record.useremail != null" >
        useremail = #{record.useremail,jdbcType=VARCHAR},
      </if>
      <if test="record.userstate != null" >
        userstate = #{record.userstate,jdbcType=INTEGER},
      </if>
      <if test="record.userdel != null" >
        userDel = #{record.userdel,jdbcType=INTEGER},
      </if>
      <if test="record.userRoleId != null" >
        user_role_id = #{record.userRoleId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set userId = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=DATE},
      modifyDate = #{record.modifydate,jdbcType=DATE},
      useremail = #{record.useremail,jdbcType=VARCHAR},
      userstate = #{record.userstate,jdbcType=INTEGER},
      userDel = #{record.userdel,jdbcType=INTEGER},
      user_role_id = #{record.userRoleId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ujiuye.user.bean.Users" >
    update users
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=DATE},
      </if>
      <if test="modifydate != null" >
        modifyDate = #{modifydate,jdbcType=DATE},
      </if>
      <if test="useremail != null" >
        useremail = #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="userstate != null" >
        userstate = #{userstate,jdbcType=INTEGER},
      </if>
      <if test="userdel != null" >
        userDel = #{userdel,jdbcType=INTEGER},
      </if>
      <if test="userRoleId != null" >
        user_role_id = #{userRoleId,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ujiuye.user.bean.Users" >
    update users
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=DATE},
      modifyDate = #{modifydate,jdbcType=DATE},
      useremail = #{useremail,jdbcType=VARCHAR},
      userstate = #{userstate,jdbcType=INTEGER},
      userDel = #{userdel,jdbcType=INTEGER},
      user_role_id = #{userRoleId,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>